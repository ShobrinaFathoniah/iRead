# name: Deploy to Telegram

# on:
#   workflow_dispatch: #manual run
#   release:
#     types: [published]

# jobs:
#   send-to-telegram:
#     name: send apk to telegran
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: instalation modules
#         run: yarn

#       - name: make gradle executable
#         run: chmod +x ./android/gradle

#       - name: generate apk
#         run: |
#           cd android
#           ./gradlew bundleRelease assembleRelease
#           cd ..

#       - name: send apk as message #gajalan
#         run: |
#           cd android/app/build/outputs/apk/release/
#           curl -X POST -H 'Content-Type: multipart/form-data' -F 'chat_id=${{secrets.TG_CHAT_ID}}' -F document=@app-release.apk ${{secrets.TG_BOT_TOKEN}}/sendDocument

stages:
  - build

cache:
  key: ${CI_PROJECT_ID}
  paths:
    - android/.gradle

build-and-send-to-telegram:
  stage: build
  script:
    - yarn
    - cd android
    - chmod +x ./gradlew
    - cd app/build/outputs/apok/release/
    - "curl -X POST -H 'Content-Type: multipart/oform-data' -F text='App Release!' - F chat_id=$TG_CHAT_ID $TG_BOT_TOKEN/sendMessage"
    - "curl -X POST -H 'Content-Type: multipart/oform-data' -F document=@app-release.apk - F chat_id=$TG_CHAT_ID $TG_BOT_TOKEN/sendDocument"

  artifacts:
    paths:
      - android/app/build/outputs/apk/

  only:
    - master
